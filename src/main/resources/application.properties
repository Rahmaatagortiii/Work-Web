# Database configuration props
spring.datasource.url=jdbc:mysql://localhost:3306/wellbeignatwork?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.main.allow-circular-references=true
# Hibernate props
spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

#Server configuration
server.port=8081
server.servlet.context-path=/Wellbeignatwork

### firebase ###
app.firebase-configuration-file=web-notifications-53dec-firebase-adminsdk-dnvji-f9120e904f.json



# For detailed logging during development
#logging.level.com=TRACE
logging.level.org.springframework=TRACE
#logging.level.org.hibernate.SQL=TRACE
#logging.level.org.hibernate.type=TRACE


# Social login provider props
spring.security.oauth2.client.registration.google.clientId=1011891755364-hcaecuhj0ot9jpkqu34r7kj5ismc4ga4.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret=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
spring.security.oauth2.client.registration.facebook.clientId=<your-client-id>
spring.security.oauth2.client.registration.facebook.clientSecret=<your-client-secret>
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/me?fields=id,name,email,picture
spring.security.oauth2.client.registration.github.clientId=<your-client-id>
spring.security.oauth2.client.registration.github.clientSecret=<your-client-secret>
spring.security.oauth2.client.registration.linkedin.clientId=789xbqupc8hnk6
spring.security.oauth2.client.registration.linkedin.clientSecret=mHufOPV7Aq36V5yw
spring.security.oauth2.client.registration.linkedin.client-authentication-method=post
spring.security.oauth2.client.registration.linkedin.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.linkedin.scope=r_liteprofile, r_emailaddress
spring.security.oauth2.client.registration.linkedin.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.linkedin.client-name=Linkedin
spring.security.oauth2.client.registration.linkedin.provider=linkedin
spring.security.oauth2.client.provider.linkedin.authorization-uri=https://www.linkedin.com/oauth/v2/authorization
spring.security.oauth2.client.provider.linkedin.token-uri=https://www.linkedin.com/oauth/v2/accessToken
spring.security.oauth2.client.provider.linkedin.user-info-uri=https://api.linkedin.com/v2/me
spring.security.oauth2.client.provider.linkedin.user-name-attribute=id
linkedin.email-address-uri=https://api.linkedin.com/v2/emailAddress?q=members&projection=(elements*(handle~))
app.auth.tokenSecret=926D96C90030DD58429D2751AC1BDBBC
app.auth.tokenExpirationMsec=864000000
# After successfully authenticating with the OAuth2 Provider,
# we'll be generating an auth token for the user and sending the token to the
# redirectUri mentioned by the frontend client in the /oauth2/authorization request.
# We're not using cookies because they won't work well in mobile clients.
app.oauth2.authorizedRedirectUris=http://localhost:8081/oauth2/redirect,myandroidapp://oauth2/redirect,myiosapp://oauth2/redirect

#Spring Boot Mail Server Properties
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=wellbeingwork16@gmail.com
spring.mail.password=Qsdfghjklm123456
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true






### SENDING / SMS ###
twilio:
account_sid: AC7d9b9a8eec70ffbb4a504a3453a44488
auth_token: 00eefc7b4626a7c73f358efe8d926e44
trial_number: +17249481678
#OpenWeatherMap API Key
OWM_API_KEY=84ca57c3b364a7ee2fbb9c2505cd2467





#logging configuration
# Spécifier le fichier externe ou les messages sont stock?s
logging.file.name=D:/spring_log_file.log
# Spécifier la taille maximale du fichier de journalisation
logging.logback.rollingpolicy.max-file-size= 100KB
# spécifier le niveau de Log
logging.level.root=INFO
# Spécifier la forme du message
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %-5level - %logger{36} - %msg%n
